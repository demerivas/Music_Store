@using System.Reflection.Emit
@model Music_Store.Application.ViewModels.AlbumViewModel

@{
    ViewBag.Title = "Novo Album";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create", "Album", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    

    <div class="form-horizontal">
        <h4>Dados do Album</h4>
        <hr />      

        @Html.Partial("_ErrorSummary")

        @{
            var artist = new Music_Store.Service.Controllers.ArtistsController();
            var listartist = artist.Get();

            var genre = new Music_Store.Service.Controllers.GenresController();
            var listgenre = genre.Get();           

        }

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>  

        <div class="form-group">
            @Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">              
               @Html.DropDownListFor(model => model.Artist.Id, new SelectList(listartist, "ID", "Name") as SelectList, 
                   htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Artist.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
               @Html.DropDownListFor(model => model.Genre.Id, new SelectList(listgenre, "ID", "Name") as SelectList, 
                htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Genre.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
               
            </div>
        </div>       

        <div class="form-group">
            @Html.LabelFor(model => model.ArtAlbumUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.ArtAlbumUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArtAlbumUrl, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-3">
                <input type="submit" value="Adicionar" class="btn btn-success" />
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-filestyle.min.js"></script>
}
